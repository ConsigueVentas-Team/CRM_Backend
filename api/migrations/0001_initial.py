# Generated by Django 3.2.23 on 2024-01-15 14:53

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('clientID', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('lastname', models.CharField(max_length=40)),
                ('documentType', models.CharField(choices=[(0, 'DNI'), (1, 'CEDULA'), (2, 'PASAPORTE'), (3, 'OTRO')], max_length=1)),
                ('documentNumber', models.CharField(max_length=14, unique=True)),
                ('email', models.CharField(max_length=30)),
                ('cellNumber', models.CharField(max_length=12)),
                ('address', models.CharField(max_length=40)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('code_name', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('saleID', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paymentType', models.CharField(choices=[(0, 'CREDIT_CARD'), (1, 'DEBIT_CARD'), (2, 'CASH'), (3, 'BANK_TRANSFER'), (4, 'OTHER')], max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.client')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=30)),
                ('lastname', models.CharField(max_length=50)),
                ('document_type', models.CharField(choices=[(0, 'DNI'), (1, 'CEDULA'), (2, 'PASAPORTE'), (3, 'OTRO')], max_length=10)),
                ('document_number', models.CharField(max_length=20, unique=True)),
                ('address', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
